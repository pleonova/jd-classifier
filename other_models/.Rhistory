install.packages("shiny")
library(shiny)
runExample("01_hello")
library(shiny)
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max = 100),
plotOutput("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
)
install.packages("rCharts")
install.packages("tm")
install.packages("ggplot2")
install.packages("RWeka")
install.packages("knitr")
install.packages("stringr")
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
install.packages("topicmodels")
install.packages("stringr")
install.packages("pdflatex")
dat <- gantt(mraja1$dialogue, list(mraja1$fam.aff, mraja1$sex),
units = "sentences", col.sep = "_")
library(ggplot2)
dat <- gantt(mraja1$dialogue, list(mraja1$fam.aff, mraja1$sex),
units = "sentences", col.sep = "_")
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
reshape(wide, direction = "long")
reshape(wide, idvar = "Subject", varying = list(2:12),
v.names = "conc", direction = "long")
## times need not be numeric
df <- data.frame(id = rep(1:4, rep(2,4)),
visit = I(rep(c("Before","After"), 4)),
x = rnorm(4), y = runif(4))
df
reshape(df, timevar = "visit", idvar = "id", direction = "wide")
## warns that y is really varying
reshape(df, timevar = "visit", idvar = "id", direction = "wide", v.names = "x")
##  unbalanced 'long' data leads to NA fill in 'wide' form
df2 <- df[1:7, ]
df2
reshape(df2, timevar = "visit", idvar = "id", direction = "wide")
## Alternative regular expressions for guessing names
df3 <- data.frame(id = 1:4, age = c(40,50,60,50), dose1 = c(1,2,1,2),
dose2 = c(2,1,2,1), dose4 = c(3,3,3,3))
reshape(df3, direction = "long", varying = 3:5, sep = "")
## an example that isn't longitudinal data
state.x77 <- as.data.frame(state.x77)
long <- reshape(state.x77, idvar = "state", ids = row.names(state.x77),
times = names(state.x77), timevar = "Characteristic",
varying = list(names(state.x77)), direction = "long")
reshape(long, direction = "wide")
reshape(long, direction = "wide", new.row.names = unique(long$state))
## multiple id variables
df3 <- data.frame(school = rep(1:3, each = 4), class = rep(9:10, 6),
time = rep(c(1,1,2,2), 3), score = rnorm(12))
wide <- reshape(df3, idvar = c("school","class"), direction = "wide")
wide
## transform back
reshape(wide)
install.packages("shiny")
library(plotrix)
Ymd.format<-"%Y/%m/%d"
gantt.info<-list(labels=c("Contract Preparation","Rapid Literature Review","CITI Training","IRB Addendum & Inclusion","Data Download","Data Analysis","Data Products"),
starts=as.POSIXct(strptime(c("2014/06/01","2014/06/04","2014/06/07","2014/06/19","2014/06/29","2014/07/01","2014/07/23"),
format=Ymd.format)),
ends=as.POSIXct(strptime(c("2014/06/16","2014/06/19","2014/06/17","2014/06/29","2014/07/02","2014/07/22","2014/08/05"),
format=Ymd.format)),
priorities=c(1,4,3,2,3,2,1))
months <- seq(as.Date("2014/06/01", "%Y/%m/%d"), by="month", length.out=8)
monthslab <- format(months, format="%b")
vgridpos<-as.POSIXct(months,format=Ymd.format)
vgridlab<-monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <- as.POSIXct(c("2014/06/01","2014/09/01"),format=Ymd.format)
gantt.chart(gantt.info, taskcolors=colfunc(4),xlim=timeframe, main="Gantt Chart for Fieldwork 2014",
priority.legend=TRUE,vgridpos=vgridpos,vgridlab=vgridlab,hgrid=TRUE)
format(months, format="%b")
library(XLConnect)
# Data Preparation
learningForestSelfFOLDER <- "C:/Users/Leonova/Google Drive/Blog - Edu Medatation/Rshiny - learningForest & Self Tracking/"
dataExcel <- paste0(learningForestSelfFOLDER, "gantt-app/data/Skill Developement Resources - Data Set Up for Gantt Chart.xlsx")
wb <- XLConnect::loadWorkbook(dataExcel)
d <- readWorksheet(wb, sheet = "Data Analysis Skill Progress")
d$Start.Date
Ymd.format <- "%Y-%m-%d"
gantt.info <- list(labels = d$Resource.Name,
starts = as.POSIXct(strptime(d$Start.Date, format = Ymd.format)),
ends = as.POSIXct(strptime(d$End.Date,format = Ymd.format)),
priorities = d$Percentage.Complete
)
firstDate <- min(as.character.Date(d$Start.Date))
dateFormat <- "%Y-%m-%d"
months <- seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
monthslab <- format(months, format="%b")
format(months, format="%b")
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
as.POSIXct(months,format=Ymd.format)
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
as.POSIXct(months,format=Ymd.format)
monthslab
library(plotrix)
Ymd.format<-"%Y/%m/%d"
gantt.info<-list(labels=c("Contract Preparation","Rapid Literature Review","CITI Training","IRB Addendum & Inclusion","Data Download","Data Analysis","Data Products"),
starts=as.POSIXct(strptime(c("2014/06/01","2014/06/04","2014/06/07","2014/06/19","2014/06/29","2014/07/01","2014/07/23"),
format=Ymd.format)),
ends=as.POSIXct(strptime(c("2014/06/16","2014/06/19","2014/06/17","2014/06/29","2014/07/02","2014/07/22","2014/08/05"),
format=Ymd.format)),
priorities=c(1,4,3,2,3,2,1))
months <- seq(as.Date("2014/06/01", "%Y/%m/%d"), by="month", length.out=8)
monthslab <- format(months, format="%b")
vgridpos<-as.POSIXct(months,format=Ymd.format)
vgridlab<-monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <- as.POSIXct(c("2014/06/01","2014/09/01"),format=Ymd.format)
gantt.chart(gantt.info, taskcolors=colfunc(4),xlim=timeframe, main="Gantt Chart for Fieldwork 2014",
priority.legend=TRUE,vgridpos=vgridpos,vgridlab=vgridlab,hgrid=TRUE)
as.POSIXct(months,format=Ymd.format)
Ymd.format <- "%Y-%m-%d"
gantt.info <- list(labels = d$Resource.Name,
starts = as.POSIXct(strptime(d$Start.Date, format = Ymd.format)),
ends = as.POSIXct(strptime(d$End.Date,format = Ymd.format)),
priorities = d$Percentage.Complete
)
firstDate <- min(as.character.Date(d$Start.Date))
dateFormat <- "%Y-%m-%d"
months <-
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
monthslab <-
format(months, format="%b")
vgridpos<-
as.POSIXct(months,format=Ymd.format)
vgridlab<-
monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <-
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
gantt.chart(gantt.info, taskcolors=colfunc(4),xlim=timeframe, main="Gantt Chart for Study Tracking",
priority.legend=TRUE,vgridpos=vgridpos,vgridlab=vgridlab,hgrid=TRUE)
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
library(plotrix)
Ymd.format<-"%Y/%m/%d"
gantt.info<-list(labels=c("Contract Preparation","Rapid Literature Review","CITI Training","IRB Addendum & Inclusion","Data Download","Data Analysis","Data Products"),
starts=as.POSIXct(strptime(c("2014/06/01","2014/06/04","2014/06/07","2014/06/19","2014/06/29","2014/07/01","2014/07/23"),
format=Ymd.format)),
ends=as.POSIXct(strptime(c("2014/06/16","2014/06/19","2014/06/17","2014/06/29","2014/07/02","2014/07/22","2014/08/05"),
format=Ymd.format)),
priorities=c(1,4,3,2,3,2,1))
months <- seq(as.Date("2014/06/01", "%Y/%m/%d"), by="month", length.out=8)
monthslab <- format(months, format="%b")
vgridpos<-
as.POSIXct(months,format=Ymd.format)
vgridlab<-monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <- as.POSIXct(c("2014/06/01","2014/09/01"),format=Ymd.format)
gantt.chart(gantt.info, taskcolors=colfunc(4),xlim=timeframe, main="Gantt Chart for Fieldwork 2014",
priority.legend=TRUE,vgridpos=vgridpos,vgridlab=vgridlab,hgrid=TRUE)
as.POSIXct(c("2014/06/01","2014/09/01"),format=Ymd.format)
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
min(as.character.Date(d$Start.Date))
library(plotrix)
library(XLConnect)
# Data Preparation
learningForestSelfFOLDER <- "C:/Users/Leonova/Google Drive/Blog - Edu Medatation/Rshiny - learningForest & Self Tracking/"
dataExcel <- paste0(learningForestSelfFOLDER, "gantt-app/data/Skill Developement Resources - Data Set Up for Gantt Chart.xlsx")
wb <- XLConnect::loadWorkbook(dataExcel)
d <- readWorksheet(wb, sheet = "Data Analysis Skill Progress")
# Data Preparation
learningForestSelfFOLDER <- "C:/Users/Leonova/Google Drive/Blog - Edu Medatation/Rshiny - learningForest & Self Tracking/"
dataExcel <- paste0(learningForestSelfFOLDER, "gantt-app/data/Skill Developement Resources - Data Set Up for Gantt Chart.xlsx")
wb <- XLConnect::loadWorkbook(dataExcel)
d <- readWorksheet(wb, sheet = "Data Analysis Skill Progress")
Ymd.format <- "%Y-%m-%d"
priorityList <- d$HoursRound
gantt.info <- list(labels = d$Resource.Name,
starts = as.POSIXct(strptime(d$Start.Date, format = Ymd.format)),
ends = as.POSIXct(strptime(d$End.Date,format = Ymd.format)),
# priorities = d$Percentage.Complete
priorities = priorityList
)
firstDate <- min(as.character.Date(d$Start.Date))
dateFormat <- "%Y-%m-%d"
months <-
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
monthslab <-
format(months, format="%b")
vgridpos <-
as.POSIXct(strptime(months,format=Ymd.format))
vgridlab <-
monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <-
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
colorLen <-
length(unique(priorityList))
gantt.chart(gantt.info, taskcolors=colfunc(colorLen),xlim=timeframe, main="Gantt Chart for Study Tracking",
priority.legend=TRUE)
length(unique(priorityList))
priorityList <- d$Priorities
gantt.info <- list(labels = d$Resource.Name,
starts = as.POSIXct(strptime(d$Start.Date, format = Ymd.format)),
ends = as.POSIXct(strptime(d$End.Date,format = Ymd.format)),
# priorities = d$Percentage.Complete
priorities = priorityList
)
firstDate <- min(as.character.Date(d$Start.Date))
dateFormat <- "%Y-%m-%d"
months <-
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
monthslab <-
format(months, format="%b")
vgridpos <-
as.POSIXct(strptime(months,format=Ymd.format))
vgridlab <-
monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <-
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
colorLen <-
length(unique(priorityList))
gantt.chart(gantt.info, taskcolors=colfunc(colorLen),xlim=timeframe, main="Gantt Chart for Study Tracking",
priority.legend=TRUE)
"
Ymd.format <- "%Y-%m-%d"
Ymd.format <- "%Y-%m-%d"
priorityList <- d$HoursRound
priorityList <- d$Priorities
gantt.info <- list(labels = d$Resource.Name,
starts = as.POSIXct(strptime(d$Start.Date, format = Ymd.format)),
ends = as.POSIXct(strptime(d$End.Date,format = Ymd.format)),
# priorities = d$Percentage.Complete
priorities = priorityList
)
firstDate <- min(as.character.Date(d$Start.Date))
dateFormat <- "%Y-%m-%d"
months <-
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
monthslab <-
format(months, format="%b")
vgridpos <-
as.POSIXct(strptime(months,format=Ymd.format))
vgridlab <-
monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <-
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
colorLen <-
length(unique(priorityList))
gantt.chart(gantt.info, taskcolors=colfunc(colorLen),xlim=timeframe, main="Gantt Chart for Study Tracking",
priority.legend=TRUE)
vgridpos=vgridpos,
vgridlab=vgridlab,
hgrid=TRUE)
library(plotrix)
library(XLConnect)
# Data Preparation
learningForestSelfFOLDER <- "C:/Users/Leonova/Google Drive/Blog - Edu Medatation/Rshiny - learningForest & Self Tracking/"
dataExcel <- paste0(learningForestSelfFOLDER, "gantt-app/data/Skill Developement Resources - Data Set Up for Gantt Chart.xlsx")
wb <- XLConnect::loadWorkbook(dataExcel)
d <- readWorksheet(wb, sheet = "Data Analysis Skill Progress")
d$Priorities
gantt.info <- list(labels = d$Resource.Name,
starts = as.POSIXct(strptime(d$Start.Date, format = Ymd.format)),
ends = as.POSIXct(strptime(d$End.Date,format = Ymd.format)),
# priorities = d$Percentage.Complete
priorities = priorityList
)
firstDate <- min(as.character.Date(d$Start.Date))
dateFormat <- "%Y-%m-%d"
months <-
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
monthslab <-
format(months, format="%b")
vgridpos <-
as.POSIXct(strptime(months,format=Ymd.format))
vgridlab <-
monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <-
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
colorLen <-
length(unique(priorityList))
gantt.chart(gantt.info, taskcolors=colfunc(colorLen),xlim=timeframe, main="Gantt Chart for Study Tracking",)
Ymd.format<-"%Y/%m/%d"
gantt.info<-list(labels=c("Contract Preparation","Rapid Literature Review","CITI Training","IRB Addendum & Inclusion","Data Download","Data Analysis","Data Products"),
starts=as.POSIXct(strptime(c("2014/06/01","2014/06/04","2014/06/07","2014/06/19","2014/06/29","2014/07/01","2014/07/23"),
format=Ymd.format)),
ends=as.POSIXct(strptime(c("2014/06/16","2014/06/19","2014/06/17","2014/06/29","2014/07/02","2014/07/22","2014/08/05"),
format=Ymd.format)),
priorities=c(1,4,3,2,3,2,1))
months <- seq(as.Date("2014/06/01", "%Y/%m/%d"), by="month", length.out=8)
monthslab <- format(months, format="%b")
vgridpos<-
as.POSIXct(months,format=Ymd.format)
vgridlab<-
monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <-
as.POSIXct(c("2014/06/01","2014/09/01"),format=Ymd.format)
gantt.chart(gantt.info, taskcolors=colfunc(4),xlim=timeframe, main="Gantt Chart for Fieldwork 2014",
priority.legend=TRUE,vgridpos=vgridpos,vgridlab=vgridlab,hgrid=TRUE)
# Data Preparation
learningForestSelfFOLDER <- "C:/Users/Leonova/Google Drive/Blog - Edu Medatation/Rshiny - learningForest & Self Tracking/"
dataExcel <- paste0(learningForestSelfFOLDER, "gantt-app/data/Skill Developement Resources - Data Set Up for Gantt Chart.xlsx")
wb <- XLConnect::loadWorkbook(dataExcel)
d <- readWorksheet(wb, sheet = "Data Analysis Skill Progress")
Ymd.format <- "%Y-%m-%d"
priorityList <- d$HoursRound
priorityList <- d$Priorities
d$Resource.Name,
d$Resource.Name
gantt.info <- list(labels = d$Resource.Name,
starts = as.POSIXct(strptime(d$Start.Date, format = Ymd.format)),
ends = as.POSIXct(strptime(d$End.Date,format = Ymd.format)),
# priorities = d$Percentage.Complete
priorities = priorityList
)
firstDate <- min(as.character.Date(d$Start.Date))
dateFormat <- "%Y-%m-%d"
months <-
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
monthslab <-
format(months, format="%b")
seq(as.Date(firstDate, dateFormat), by="month", length.out=8)
format(months, format="%b")
vgridpos <-
as.POSIXct(strptime(months,format=Ymd.format))
vgridlab <-
monthslab
as.POSIXct(strptime(months,format=Ymd.format))
monthslab
colfunc <- colorRampPalette(c("red", "darkgoldenrod1"))
timeframe <-
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
as.POSIXct(c(min(as.character.Date(d$Start.Date)),max(as.character.Date(d$Start.Date))),format=dateFormat)
length(unique(priorityList))
colorLen <-
length(unique(priorityList))
gantt.info
gantt.chart(gantt.info, taskcolors=colfunc(colorLen),xlim=timeframe, main="Gantt Chart for Study Tracking")
plot.new()
getwd()
model_folder = '/Users/Leonova/Repos/jd-classifier/other_models'
setwd(model_folder)
getwd()
d_tm = read.csv("jd_dense_dtm.csv")
View(d_tm)
library(cluster)
d.dist <- daisy(d_tm)
dtm.matrix = as.matrix(d_tm)
inspect(dtm)
library(tm)
inspect(dtm)
inspect(d_tm)
inspect(dtm.matrix
)
inspect(dtm.matrix)
library(tm)
library(proxy)
library(RTextTools)
library(fpc)
library(wordcloud)
library(cluster)
library(tm)
library(stringi)
library(proxy)
library(wordcloud)
corpus = read.csv("jd_corpus.csv")
summary(corpus)
ndocs <- length(corpus)
# ignore extremely rare words i.e. terms that appear in less then 1% of the documents
minTermFreq <- ndocs * 0.01
# ignore overly common words i.e. terms that appear in more than 50% of the documents
maxTermFreq <- ndocs * .5
dtm = DocumentTermMatrix(corpus,
control = list(
stopwords = TRUE,
wordLengths=c(4, 15),
removePunctuation = T,
removeNumbers = T,
#stemming = T,
bounds = list(global = c(minTermFreq, maxTermFreq))
))
#dtm <- dtm[, names(head(sort(colSums(as.matrix(dtm))), 400))]
#dtm <- dtm[, names(sort(colSums(as.matrix(dtm))))]
#print(as.matrix(dtm))
write.csv((as.matrix(dtm)), "test.csv")
dtm = DocumentTermMatrix(corpus,
control = list(
stopwords = TRUE,
wordLengths=c(4, 15),
removePunctuation = T,
removeNumbers = T,
#stemming = T,
bounds = list(global = c(minTermFreq, maxTermFreq))
))
dtm = DocumentTermMatrix(as.matrix(corpus),
control = list(
stopwords = TRUE,
wordLengths=c(4, 15),
removePunctuation = T,
removeNumbers = T,
#stemming = T,
bounds = list(global = c(minTermFreq, maxTermFreq))
))
View(corpus)
corpus[:1]
c = corpus$description
dtm = DocumentTermMatrix(c,
control = list(
stopwords = TRUE,
wordLengths=c(4, 15),
removePunctuation = T,
removeNumbers = T,
#stemming = T,
bounds = list(global = c(minTermFreq, maxTermFreq))
))
dtm = DocumentTermMatrix(corpus,
control = list(
stopwords = TRUE,
wordLengths=c(4, 15),
removePunctuation = T,
removeNumbers = T,
#stemming = T,
bounds = list(global = c(minTermFreq, maxTermFreq))
))
x(as.vector(corpus)
as.vector(corpus)
dtm = DocumentTermMatrix(as.vector(corpus),
control = list(
stopwords = TRUE,
wordLengths=c(4, 15),
removePunctuation = T,
removeNumbers = T,
#stemming = T,
bounds = list(global = c(minTermFreq, maxTermFreq))
))
myCorpus = read.csv("jd_corpus.csv")
corpus <- Corpus(VectorSource(myCorpus$description))
TermDocumentMatrix(corpus)
dtm = TermDocumentMatrix(corpus)
inspect(dtm)
dtm
m  <- as.matrix(dtm)
distMatrix <- dist(m, method="euclidean")
groups <- hclust(distMatrix,method="ward.D")
plot(groups, cex=0.9, hang=-1)
rect.hclust(groups, k=5)
ndocs <- length(corpus)
# ignore extremely rare words i.e. terms that appear in less then 1% of the documents
minTermFreq <- ndocs * 0.01
# ignore overly common words i.e. terms that appear in more than 50% of the documents
maxTermFreq <- ndocs * .5
dtm = DocumentTermMatrix(corpus,
control = list(
stopwords = TRUE,
wordLengths=c(4, 15),
removePunctuation = T,
removeNumbers = T,
#stemming = T,
bounds = list(global = c(minTermFreq, maxTermFreq))
))
dtm
m  <- as.matrix(dtm)
distMatrix <- dist(m, method="euclidean")
groups <- hclust(distMatrix,method="ward.D")
plot(groups, cex=0.9, hang=-1)
rect.hclust(groups, k=5)
myCorpus = read.csv("jd_detail_corpus.csv")
corpus <- Corpus(VectorSource(myCorpus$description))
ndocs <- length(corpus)
# ignore extremely rare words i.e. terms that appear in less then 1% of the documents
minTermFreq <- ndocs * 0.01
# ignore overly common words i.e. terms that appear in more than 50% of the documents
maxTermFreq <- ndocs * .5
dtm = DocumentTermMatrix(corpus,
control = list(
stopwords = TRUE,
wordLengths=c(4, 15),
removePunctuation = T,
removeNumbers = T,
#stemming = T,
bounds = list(global = c(minTermFreq, maxTermFreq))
))
# Summary
dtm
m  <- as.matrix(dtm)
distMatrix <- dist(m, method="euclidean")
groups <- hclust(distMatrix, method="ward.D")
plot(groups, cex=0.9, hang=-1)
rect.hclust(groups, k=5)
% reset
q
q()
